{"ast":null,"code":"import { bindActionCreators, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { set } from \"lodash\";\nexport const productState = {\n  loading: false,\n  error: \"\",\n  products: []\n};\nexport const fetchProducts = createAsyncThunk(\"products/fetchProducts\", async () => {\n  const response = await fetch(\"https://fakestoreapi.com/products\");\n  const data = await response.json();\n  return data;\n});\nexport const productsSlice = createSlice({\n  name: \"products\",\n  initialState: productState,\n  reducers: {\n    deleteProduct: (state, action) => {\n      const productId = action.payload;\n      const tempProducts = [...state.products].filter(pd => pd.id !== productId);\n      state.products = tempProducts;\n    },\n    searchProduct: (state, action) => {\n      const searchTerm = action.payload;\n      if (!searchTerm) {\n        return;\n      }\n      const searchedProduct = [...state.products].filter(pd => pd.title.toLowerCase().includes(searchTerm.toLowerCase()));\n      state.products = searchedProduct;\n    },\n    sortProduct: (state, action) => {\n      const type = action.payload;\n      if (type) {\n        const sortProduct = [...state.products].sort((a, b) => a.title.localeCompare(b.title));\n        state.products = sortProduct;\n      } else {\n        const sortProduct = [...state.products].sort((a, b) => b.title.localeCompare(a.title));\n        state.products = sortProduct;\n      }\n    },\n    cartRedu: (state, action) => {\n      switch (action.type) {\n        case \"ADD\":\n          const tempstate = state.filter(id => action.payload.id === id.id);\n          if (tempstate.length > 0) {\n            return state;\n          } else {\n            return [...state, action.payload];\n          }\n        case \"INCREASE\":\n          const tempstate1 = state.map(id => {\n            if (id.id === action.payload.id) {\n              return {\n                ...id,\n                quantity: id.quantity + 1\n              };\n            } else {\n              return id;\n            }\n          });\n          return tempstate1;\n        case \"DECREASE\":\n          const tempstate2 = state.map(id => {\n            if (id.id === action.payload.id) {\n              return {\n                ...id,\n                quantity: id.quantity - 1\n              };\n            } else {\n              return id;\n            }\n          });\n          return tempstate2;\n        case \"REMOVE\":\n          const tempstate3 = state.filter(id => id.id !== action.payload.id);\n          return tempstate3;\n        default:\n          return state;\n      }\n    }\n  },\n  handleSortlth: (state, action) => {\n    const type = action.payload;\n    if (type) {\n      const sortlth = [...state.products].sort((a, b) => a.price - b.price);\n      state.products = sortlth;\n    }\n  },\n  //maintin redux state for asyc apis\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.error = \"\";\n      state.loading = true;\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.products = action.payload;\n      state.error = \"\";\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.loading = false;\n      state.products = [];\n      state.error = action.payload;\n    });\n  }\n});\n\n//export actions\nexport const {\n  deleteProduct,\n  searchProduct,\n  sortProduct,\n  handleSortlth,\n  cartRedu\n} = productsSlice.actions;\nexport default productsSlice.reducer;","map":{"version":3,"names":["bindActionCreators","createAsyncThunk","createSlice","set","productState","loading","error","products","fetchProducts","response","fetch","data","json","productsSlice","name","initialState","reducers","deleteProduct","state","action","productId","payload","tempProducts","filter","pd","id","searchProduct","searchTerm","searchedProduct","title","toLowerCase","includes","sortProduct","type","sort","a","b","localeCompare","cartRedu","tempstate","length","tempstate1","map","quantity","tempstate2","tempstate3","handleSortlth","sortlth","price","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/sauuu/OneDrive/ドキュメント/Store/storedai/src/store/products/index.js"],"sourcesContent":["import { bindActionCreators, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { set } from \"lodash\";\r\n\r\nexport const productState = {\r\n  loading: false,\r\n  error: \"\",\r\n  products: []\r\n};\r\n\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n  \"products/fetchProducts\",\r\n  async () => {\r\n    const response = await fetch(\"https://fakestoreapi.com/products\");\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState: productState,\r\n  reducers: {\r\n \r\n    deleteProduct: (state, action) => {\r\n      const productId = action.payload;\r\n      const tempProducts = [...state.products].filter(\r\n        (pd) => pd.id !== productId\r\n      );\r\n      state.products = tempProducts;\r\n    },\r\n \r\n    searchProduct: (state, action) => {\r\n      const searchTerm = action.payload;\r\n      if (!searchTerm) {\r\n        return;\r\n      }\r\n      const searchedProduct = [...state.products].filter((pd) =>\r\n        pd.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n      state.products = searchedProduct;\r\n    },\r\n    sortProduct: (state, action) => {\r\n      const type = action.payload;\r\n      if (type) {\r\n        const sortProduct = [...state.products].sort((a, b) =>\r\n          a.title.localeCompare(b.title)\r\n        );\r\n        state.products = sortProduct;\r\n      } else {\r\n        const sortProduct = [...state.products].sort((a, b) =>\r\n          b.title.localeCompare(a.title)\r\n        );\r\n        state.products = sortProduct;\r\n      }\r\n    },\r\n    cartRedu: (state, action) => {\r\n    switch (action.type) {\r\n      case \"ADD\":\r\n        const tempstate = state.filter((id) => action.payload.id === id.id);\r\n        if (tempstate.length > 0) {\r\n          return state;\r\n        } else {\r\n          return [...state, action.payload];\r\n        }\r\n      case \"INCREASE\":\r\n        const tempstate1 = state.map((id) => {\r\n          if (id.id === action.payload.id) {\r\n            return { ...id, quantity: id.quantity + 1 };\r\n          } else {\r\n            return id;\r\n          }\r\n        });\r\n        return tempstate1;\r\n      case \"DECREASE\":\r\n        const tempstate2 = state.map((id) => {\r\n          if (id.id === action.payload.id) {\r\n            return { ...id, quantity: id.quantity - 1 };\r\n          } else {\r\n            return id;\r\n          }\r\n        });\r\n        return tempstate2;\r\n      case \"REMOVE\":\r\n        const tempstate3 = state.filter(\r\n          (id) => id.id !== action.payload.id\r\n        );\r\n\r\n        return tempstate3;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n    }\r\n  \r\n  },\r\n\r\n  handleSortlth: (state, action) => {\r\n    const type = action.payload;\r\n      if (type) {\r\n        \r\n        const sortlth =[...state.products].sort((a, b) => (a.price-b.price));\r\n        state.products= sortlth\r\n      } \r\n    },\r\n  \r\n  \r\n  //maintin redux state for asyc apis\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state) => {\r\n        state.error = \"\";\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.products = action.payload;\r\n        state.error = \"\";\r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.products = [];\r\n        state.error = action.payload;\r\n      });\r\n  }\r\n});\r\n\r\n//export actions\r\nexport const { deleteProduct, searchProduct, sortProduct, handleSortlth, cartRedu} = productsSlice.actions;\r\n\r\nexport default productsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}