{"ast":null,"code":"import { bindActionCreators, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const productState = {\n  loading: false,\n  error: \"\",\n  products: []\n};\nexport const fetchProducts = createAsyncThunk(\"products/fetchProducts\", async () => {\n  const response = await fetch(\"https://fakestoreapi.com/products\");\n  const data = await response.json();\n  return data;\n});\nexport const productsSlice = createSlice({\n  name: \"products\",\n  initialState: productState,\n  reducers: {\n    deleteProduct: (state, action) => {\n      const productId = action.payload;\n      const tempProducts = [...state.products].filter(pd => pd.id !== productId);\n      state.products = tempProducts;\n    },\n    searchProduct: (state, action) => {\n      const searchTerm = action.payload;\n      if (!searchTerm) {\n        return;\n      }\n      const searchedProduct = [...state.products].filter(pd => pd.title.toLowerCase().includes(searchTerm.toLowerCase()));\n      state.products = searchedProduct;\n    },\n    sortProduct: (state, action) => {\n      const sortBy = action.payload;\n      state.productState = state.timePeriodData.sort((a, b) => b[sortBy] - a[sortBy]);\n    }\n\n    // sortProduct: (state, action) => ({\n    //   collection: state.app.developersList,\n    //   sortParams: state.app.sortParams\n    // }),\n\n    // const mapDispatch = dispatch =>({\n    //     setSortParams: bindActionCreators(actions.setSortParams, dispatch)\n\n    // });\n    // sortProductByPrice: (state, action) => {\n    // //   max= max price of product\n    // //   min = min price of product..\n    // }\n\n    //create product details page\n    //Create cart page and it's functionality..\n  },\n\n  //maintin redux state for asyc apis\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.error = \"\";\n      state.loading = true;\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.products = action.payload;\n      state.error = \"\";\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.loading = false;\n      state.products = [];\n      state.error = action.payload;\n    });\n  }\n});\n\n//export actions\nexport const {\n  deleteProduct,\n  searchProduct,\n  sortProduct\n} = productsSlice.actions;\nexport default productsSlice.reducer;","map":{"version":3,"names":["bindActionCreators","createAsyncThunk","createSlice","productState","loading","error","products","fetchProducts","response","fetch","data","json","productsSlice","name","initialState","reducers","deleteProduct","state","action","productId","payload","tempProducts","filter","pd","id","searchProduct","searchTerm","searchedProduct","title","toLowerCase","includes","sortProduct","sortBy","timePeriodData","sort","a","b","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/sauuu/OneDrive/ドキュメント/Store/storedai/src/store/products/index.js"],"sourcesContent":["import { bindActionCreators, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const productState = {\r\n  loading: false,\r\n  error: \"\",\r\n  products: []\r\n};\r\n\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n  \"products/fetchProducts\",\r\n  async () => {\r\n    const response = await fetch(\"https://fakestoreapi.com/products\");\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState: productState,\r\n  reducers: {\r\n \r\n    deleteProduct: (state, action) => {\r\n      const productId = action.payload;\r\n      const tempProducts = [...state.products].filter(\r\n        (pd) => pd.id !== productId\r\n      );\r\n      state.products = tempProducts;\r\n    },\r\n \r\n    searchProduct: (state, action) => {\r\n      const searchTerm = action.payload;\r\n      if (!searchTerm) {\r\n        return;\r\n      }\r\n      const searchedProduct = [...state.products].filter((pd) =>\r\n        pd.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n      state.products = searchedProduct;\r\n    },\r\n    sortProduct: (state, action) => {\r\n        const sortBy = action.payload\r\n        state.productState = state.timePeriodData.sort((a, b) => b[sortBy] - a[sortBy])\r\n    }\r\n  \r\n    // sortProduct: (state, action) => ({\r\n    //   collection: state.app.developersList,\r\n    //   sortParams: state.app.sortParams\r\n    // }),\r\n\r\n    // const mapDispatch = dispatch =>({\r\n    //     setSortParams: bindActionCreators(actions.setSortParams, dispatch)\r\n\r\n    // });\r\n    // sortProductByPrice: (state, action) => {\r\n    // //   max= max price of product\r\n    // //   min = min price of product..\r\n    // }\r\n\r\n    //create product details page\r\n    //Create cart page and it's functionality..\r\n  },\r\n  //maintin redux state for asyc apis\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state) => {\r\n        state.error = \"\";\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.products = action.payload;\r\n        state.error = \"\";\r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.products = [];\r\n        state.error = action.payload;\r\n      });\r\n  }\r\n});\r\n\r\n//export actions\r\nexport const { deleteProduct, searchProduct, sortProduct} = productsSlice.actions;\r\n\r\nexport default productsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}